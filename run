#!/bin/bash
# set up the db, build the go project, check if succesfull
# if success, mv executable to an .o file for .gitinore
# then run
# make dir users for user folder, not tracked by git
# make dir aaa for testing stuff in

clear
clean=1
tst=1
port="-port=8080"
echo options -ctip 8080
echo c to clean, t to just test, i and p with port number
echo p and port number must go last
while getopts ":ctip:" o; do
	case $o in
		c)
			clean=0
			;;
		t)
			tst=0
			;;
		i)
			go get
			go install github.com/jmoiron/sqlx
			go install github.com/mattn/go-sqlite3
			;;
		p)
			port="-port=$OPTARG"
			;;
		"?")
			echo unknown argument
			exit 1
			;;
	esac
done
shift "$((OPTIND-1))"

#echo $clean $tst
if [ $clean -eq 0 ]; then
	echo $(tput setaf 1)clearing dabase and files$(tput sgr0)
	rm "data.db"
	rm -rf "users"
fi

if [ ! -e "data.db" ]; then
	sqlite3 data.db < data.sql
	if [ $? -ne 0 ]; then
		echo $(tput setaf 1)error creating sqlite db$(tput sgr0)
		exit 1
	fi
fi

if [ ! -d "users/aaa" ]; then
	mkdir -p "users/aaa"
	if [ $? -ne 0 ]; then
		echo $(tput setaf 1)error creating user directory$(tput sgr0)
		exit 1
	fi
fi

go build
if [ $? -eq 0 ]; then
	fld=${PWD##*/}
	if [ -f $fld ]; then
		mv $fld ${fld}.o
		if [ $tst -eq 0 ]; then
			echo 'sucess'
		else
			./${fld}.o $port
		fi
	fi
else
	echo $(tput setaf 1)error$(tput sgr0)
	exit 1
fi
