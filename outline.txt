0) languages
	python
		virtual environments
		nice package manager
		easy to write, nice wrapper
		-not very fast or efficient
	node
		lots of support, packages
		easy to write, kind of easy to get the hang of
		fast to produce, run, test
		-packages can get bulky
		-not very efficient with memory
	go
		efficient, clean, concise
		good concurrency
		scalable, easy to add onto
		-has memory overhead, large stdlib
		-still kind of new, but getting better support

1) main server
	in go
		good concurrency
		easy-ish to write
		memory safe, not leaky, probably small
		runs on c binaries
	in node
		popular, lots of support
		easy to write
		interface with web applications nicely
		-not very memory friendly
	in python
		easy to write
		easy to interface
		-not very fast, memory efficient
		- not very scalable
		probably better for small tasks

2) DB
DB to users, file locations. Store file age, last use.
	PostgreSQL
		large, scalable
		safe, powerful
		network based
		-maybe to large for 0.1
	SQLite
		small, easy to work with
		not very scalable
		single file
	MySQL
		easy to work with, popular
		scalable
		-not very concurrent
		-some reliability issues, may be buggy
		-maybe to large for 0.1

3) file movement
	go
		easy, quick
		have done it before
	python
		easy, simple
		speed wont be a very big problem because of limitations of file IO

4) informing user (email, sms(?))
user gmail api or local smtp server
	python
		easy, already done with email, SMS
		theres a module for that
	node
		pretty easy as well
		theres a package for that
